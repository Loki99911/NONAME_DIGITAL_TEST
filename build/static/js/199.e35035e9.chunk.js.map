{"version":3,"file":"static/js/199.e35035e9.chunk.js","mappings":"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","sources":["webpack://react/./src/components/Calculator/Calculator.module.css?7770","components/Calculator/Calculator.jsx","webpack://react/./src/components/SummaryTable/SummaryTable.module.css?93cc","components/SummaryTable/SummaryTable.jsx","webpack://react/./src/components/TransactionTable/TransactionTable.module.css?0793","components/TransactionTable/TransactionTable.jsx","webpack://react/./src/components/common/button/button.module.css?89cf","components/common/button/button.jsx","components/ExpIncPart/ExpencePart.jsx","pages/Expenses/Expenses.jsx","webpack://react/./src/components/ExpIncPart/ExpIncPart.module.css?d7a1"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Calculator_container__PvCpz\",\"inputCount\":\"Calculator_inputCount__mRc8O\"};","import styles from '../Calculator/Calculator.module.css';\r\n\r\nexport const Calculator = () => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <svg\r\n        className={styles.svgCalc}\r\n        width=\"20\"\r\n        height=\"20\"\r\n        viewBox=\"0 0 20 20\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          d=\"M17.0312 0H2.96875C1.99949 0 1.21094 0.788555 1.21094 1.75781V18.2422C1.21094 19.2114 1.99949 20 2.96875 20H17.0312C18.0005 20 18.7891 19.2114 18.7891 18.2422V1.75781C18.7891 0.788555 18.0005 0 17.0312 0ZM17.6172 18.2422C17.6172 18.5653 17.3543 18.8281 17.0312 18.8281H2.96875C2.64566 18.8281 2.38281 18.5653 2.38281 18.2422V1.75781C2.38281 1.43473 2.64566 1.17188 2.96875 1.17188H17.0312C17.3543 1.17188 17.6172 1.43473 17.6172 1.75781V18.2422Z\"\r\n          fill=\"#52555F\"\r\n        />\r\n        <path\r\n          d=\"M15.8594 2.34375H4.14062C3.81703 2.34375 3.55469 2.60609 3.55469 2.92969V7.69531C3.55469 8.01891 3.81703 8.28125 4.14062 8.28125H15.8594C16.183 8.28125 16.4453 8.01891 16.4453 7.69531V2.92969C16.4453 2.60609 16.183 2.34375 15.8594 2.34375ZM15.2734 7.10938H4.72656V3.51562H15.2734V7.10938Z\"\r\n          fill=\"#52555F\"\r\n        />\r\n        <path\r\n          d=\"M6.48438 9.45312H4.14062C3.81703 9.45312 3.55469 9.71547 3.55469 10.0391V12.3828C3.55469 12.7064 3.81703 12.9688 4.14062 12.9688H6.48438C6.80797 12.9688 7.07031 12.7064 7.07031 12.3828V10.0391C7.07031 9.71547 6.80797 9.45312 6.48438 9.45312ZM5.89844 11.7969H4.72656V10.625H5.89844V11.7969Z\"\r\n          fill=\"#52555F\"\r\n        />\r\n        <path\r\n          d=\"M6.48438 14.1406H4.14062C3.81703 14.1406 3.55469 14.403 3.55469 14.7266V17.0703C3.55469 17.3939 3.81703 17.6562 4.14062 17.6562H6.48438C6.80797 17.6562 7.07031 17.3939 7.07031 17.0703V14.7266C7.07031 14.403 6.80797 14.1406 6.48438 14.1406ZM5.89844 16.4844H4.72656V15.3125H5.89844V16.4844Z\"\r\n          fill=\"#52555F\"\r\n        />\r\n        <path\r\n          d=\"M11.1719 9.45312H8.82812C8.50453 9.45312 8.24219 9.71547 8.24219 10.0391V12.3828C8.24219 12.7064 8.50453 12.9688 8.82812 12.9688H11.1719C11.4955 12.9688 11.7578 12.7064 11.7578 12.3828V10.0391C11.7578 9.71547 11.4955 9.45312 11.1719 9.45312ZM10.5859 11.7969H9.41406V10.625H10.5859V11.7969Z\"\r\n          fill=\"#52555F\"\r\n        />\r\n        <path\r\n          d=\"M11.1719 14.1406H8.82812C8.50453 14.1406 8.24219 14.403 8.24219 14.7266V17.0703C8.24219 17.3939 8.50453 17.6562 8.82812 17.6562H11.1719C11.4955 17.6562 11.7578 17.3939 11.7578 17.0703V14.7266C11.7578 14.403 11.4955 14.1406 11.1719 14.1406ZM10.5859 16.4844H9.41406V15.3125H10.5859V16.4844Z\"\r\n          fill=\"#52555F\"\r\n        />\r\n        <path\r\n          d=\"M15.8594 9.45312H13.5156C13.192 9.45312 12.9297 9.71547 12.9297 10.0391V17.0703C12.9297 17.3939 13.192 17.6562 13.5156 17.6562H15.8594C16.183 17.6562 16.4453 17.3939 16.4453 17.0703V10.0391C16.4453 9.71547 16.183 9.45312 15.8594 9.45312ZM15.2734 16.4844H14.1016V10.625H15.2734V16.4844Z\"\r\n          fill=\"#52555F\"\r\n        />\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Table\":\"SummaryTable_Table__y--S3\",\"Title\":\"SummaryTable_Title__jCvk-\",\"List\":\"SummaryTable_List__cUXlp\",\"Item\":\"SummaryTable_Item__YzxWN\"};","import s from './SummaryTable.module.css';\r\nimport { PropTypes } from 'prop-types';\r\nimport { Translator } from \"components/Translator/Translator\";\r\n\r\nexport const SummaryTable = ({ summaryData = {} }) => {\r\n  const monthStats = Object.entries(summaryData).filter(\r\n    elem => elem[1] !== 'N/A'\r\n  );\r\n\r\n  return (\r\n    <div className={s.Table}>\r\n      <p className={s.Title}>Summary</p>\r\n      <ul className={s.List}>\r\n        {monthStats?.map((elem, index) => {\r\n          return (\r\n            <li key={index} className={s.Item}>\r\n              <span className={s.Mouth}>{Translator(elem[0])}</span>\r\n              <span className={s.Sum}>{elem[1].toFixed(2)}</span>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nSummaryTable.propTypes = {\r\n  transactionData: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"TableScroll\":\"TransactionTable_TableScroll__XZJiM\",\"TableScrollBody\":\"TransactionTable_TableScrollBody__1PV0j\",\"ExpensesSum\":\"TransactionTable_ExpensesSum__zlicP\",\"IncomeSum\":\"TransactionTable_IncomeSum__n8tob\",\"TDesc\":\"TransactionTable_TDesc__bDCKd\"};","import { useDispatch } from 'react-redux';\r\nimport s from './TransactionTable.module.css';\r\nimport { removeTransaction } from 'redux/Transaction/transactionOperations';\r\nimport { PropTypes } from 'prop-types';\r\nimport DeleteButton from 'components/common/button-delete/button-delete';\r\nimport { Translator } from 'components/Translator/Translator';\r\nexport const TransactionTable = ({ tablePage, transactionData }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n\r\n    <div className={s.TableScroll}>\r\n      <table>\r\n        <thead className={s.Thead}>\r\n          <tr>\r\n            <th>Date</th>\r\n            <th className={s.TDesc}>Description</th>\r\n            <th>Category</th>\r\n            <th>Sum</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n      </table>\r\n      <div className={s.TableScrollBody}>\r\n        <table>\r\n          <tbody className={s.Tbody} >\r\n            {transactionData?.map(item => (\r\n              <tr className={s.Tr} key={item._id} colSpan='4'>\r\n                <td className={s.Td} > {item.date}</td>\r\n                <td className={s.TDesc}>{item.description}</td>\r\n                <td className={s.Td}>{Translator(item.category)}</td>\r\n                {\r\n                  tablePage === '/main/expenses' || tablePage === '/expenses' || tablePage === '/Main/expenses' ? (\r\n                    <td className={s.ExpensesSum}>{`- ${item.amount.toFixed(2)} UAH.`}</td>\r\n                  ) : (\r\n                    <td className={s.IncomeSum}>{`${item.amount.toFixed(2)} UAH.`}</td>\r\n                  )\r\n                }\r\n                <td >\r\n                  <DeleteButton onClick={() => dispatch(removeTransaction(item._id))} />\r\n                </td>\r\n              </tr >\r\n            ))}\r\n          </tbody>\r\n\r\n\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTransactionTable.propTypes = {\r\n  tablePage: PropTypes.string,\r\n  transactionData: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"button_button__bHohq\",\"buttonContainer\":\"button_buttonContainer__A-75s\"};","import React from 'react';\r\nimport styles from './button.module.css';\r\n\r\nexport default function Button({ text, type = 'button', onClick }) {\r\n  return (\r\n    <div className={styles.buttonContainer}>\r\n      <button className={styles.button} type={type} onClick={onClick}>\r\n        {text}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addExpense, getExpenseCategories, getExpenseStats } from \"redux/Transaction/transactionOperations\";\r\nimport { getBalance, getCurrentDate, getExpencesCategories, getExpencesMonthStats, getExpencesTransactions, getIsLoading } from \"redux/Transaction/transactionSelectors\";\r\nimport s from './ExpIncPart.module.css';\r\nimport { Calendar } from 'components/Calendar/Calendar';\r\nimport { Calculator } from 'components/Calculator/Calculator';\r\nimport { Loader } from 'components/Loader/Loader';\r\nimport Button from 'components/common/button/button';\r\nimport { SummaryTable } from 'components/SummaryTable/SummaryTable';\r\nimport { TransactionTable } from 'components/TransactionTable/TransactionTable';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { Translator } from \"components/Translator/Translator\";\r\nimport { setNewDate } from 'redux/Transaction/transactionReducer';\r\n\r\n\r\nexport const ExpencePart = () => {\r\n    const [description, setDescription] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [sum, setSum] = useState('');\r\n    const [list, setList] = useState(false);\r\n    // const [startDate, setStartDate] = useState(new Date());\r\n    const [emptyInput, setEmptyInput] = useState(false);\r\n    const loading = useSelector(getIsLoading) === true;\r\n\r\n\r\n\r\n    const prodExp = useSelector(getExpencesCategories);\r\n    const expensesTransactionData = useSelector(getExpencesTransactions);\r\n    const expensesSummaryData = useSelector(getExpencesMonthStats);\r\n    const balance = useSelector(getBalance);\r\n    const dispatch = useDispatch();\r\n    const pageLocation = useLocation().pathname;\r\n    const newDate = useSelector(getCurrentDate);\r\n\r\n    console.log(expensesTransactionData);\r\n\r\n    useEffect(() => {\r\n        dispatch(getExpenseCategories());\r\n        dispatch(getExpenseStats());\r\n        if (newDate === null) {\r\n            dispatch(setNewDate(new Date()))\r\n        }\r\n    }, [dispatch, balance, newDate]);\r\n    console.log(newDate);\r\n    const handleChangeForm = evt => {\r\n        const { value, name } = evt.target;\r\n        switch (name) {\r\n            case 'description':\r\n                setDescription(value);\r\n                break;\r\n            case 'category':\r\n                setCategory(value);\r\n                break;\r\n            case 'sum':\r\n                setSum(value);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n    const handleResetForm = () => {\r\n        setEmptyInput(false);\r\n        setDescription('');\r\n        setCategory('');\r\n        setSum('');\r\n        // setStartDate(new Date());\r\n    };\r\n\r\n    const handleSubmitForm = evt => {\r\n        evt.preventDefault();\r\n\r\n        if (!description) {\r\n            setEmptyInput(true);\r\n            return;\r\n        }\r\n        if (!category) {\r\n            setEmptyInput(true);\r\n            return;\r\n        }\r\n        if (!sum) {\r\n            setEmptyInput(true);\r\n            return;\r\n        }\r\n        const items = {\r\n            description: description,\r\n            amount: Number(sum),\r\n            date: newDate.toISOString().slice(0, 10),\r\n            category: category,\r\n        };\r\n        dispatch(addExpense(items));\r\n        handleResetForm();\r\n    };\r\n    const handleIsListTogle = () => {\r\n        setList(!list);\r\n    };\r\n\r\n    const handleCloseByDrope = evt => {\r\n        if (evt.target === evt.currentTarget) {\r\n            setList(!list);\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n\r\n\r\n\r\n        <div className={s.container}>\r\n            <div className={s.contentContainer}>\r\n\r\n                <div className={s.backToMain}>\r\n                    <a href=\"/React-team-project/Main\">\r\n                        <svg width=\"18\" height=\"12\" viewBox=\"0 0 18 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n                            <path d=\" M18 5H3.83L7.41 1.41L6 0L0 6L6 12L7.41 10.59L3.83 7H18V5Z\" fill=\"#FF751D\">\r\n                            </path>\r\n                        </svg>\r\n                    </a></div>\r\n\r\n                {loading ? (\r\n                    <Loader />\r\n                ) : (\r\n                    <>\r\n                        <div className={s.formContainer}>\r\n                            <div className={s.calendar}>\r\n                                <Calendar selected={newDate} />\r\n                            </div>\r\n                            <form className={s.form} onSubmit={handleSubmitForm}>\r\n                                <input\r\n                                    className={s.inputDescription}\r\n                                    placeholder=\"Product description\"\r\n                                    autoComplete=\"off\"\r\n                                    type=\"text\"\r\n                                    name=\"description\"\r\n                                    value={description}\r\n                                    onChange={handleChangeForm}\r\n                                />\r\n\r\n                                <div className={s.inputCategoryContainer}>\r\n                                    <button\r\n                                        className={s.inputCategory}\r\n                                        onClick={handleIsListTogle}\r\n                                        type=\"button\">\r\n                                        {category ? (\r\n                                            <p style={{ color: '#52555F' }}>{Translator(category)}</p>\r\n                                        ) : (\r\n                                            <p style={{ color: '#c7ccdc' }}>Product category</p>\r\n                                        )}\r\n                                        <span className={s.arrow}>&#129171;</span>\r\n                                    </button>\r\n                                    {list && (\r\n                                        <>\r\n                                            <div\r\n                                                className={s.overlay}\r\n                                                onClick={handleCloseByDrope}>\r\n                                            </div>\r\n                                            <ul className={s.listCategory}>\r\n                                                {prodExp.map((el, ind) => (\r\n                                                    <li\r\n                                                        value={el}\r\n                                                        key={ind}\r\n                                                        className={s.itemCategory}\r\n                                                        onClick={() => {\r\n                                                            setCategory(el);\r\n                                                            handleIsListTogle();\r\n                                                        }}\r\n                                                    >\r\n                                                        {Translator(el)}\r\n                                                    </li>\r\n                                                ))}\r\n                                            </ul>\r\n                                        </>\r\n                                    )}\r\n                                </div>\r\n                                <div className={s.errContainer}>\r\n                                    <p className={s.errDescriptionMsg}>\r\n                                        {!description && emptyInput && 'Enter description!'}\r\n                                    </p>\r\n                                    <p className={s.errCategoryMsg}>\r\n                                        {!category && emptyInput && 'Select category!'}\r\n                                    </p>\r\n                                    <p className={s.errSummMsg}>\r\n                                        {!sum && emptyInput && 'Enter sum!'}\r\n                                    </p>\r\n                                </div>\r\n                                <div className={s.inputSummContainer}>\r\n                                    <input\r\n                                        className={s.inputSumm}\r\n                                        placeholder=\"0,00\"\r\n                                        type=\"number\"\r\n                                        name=\"sum\"\r\n                                        value={sum}\r\n                                        onChange={handleChangeForm}\r\n                                    />\r\n                                    <Calculator />\r\n                                </div>\r\n                            </form>\r\n                            <div className={s.buttonContainer}>\r\n                                <Button\r\n                                    text={'INPUT'}\r\n                                    type={'submit'}\r\n                                    onClick={handleSubmitForm}\r\n                                />\r\n                                <Button\r\n                                    text={'CLEAR'}\r\n                                    type={'button'}\r\n                                    onClick={handleResetForm}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={s.tableContainer}>\r\n                            <div className={s.prods}>\r\n                                <TransactionTable\r\n                                    transactionData={expensesTransactionData}\r\n                                    tablePage={pageLocation}\r\n                                />\r\n                            </div>\r\n                            <div className={s.sumary}>\r\n                                <SummaryTable summaryData={expensesSummaryData} />\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </div >\r\n    );\r\n};","// export default function Expenses() {\r\n//     return <div>Expenses...</div>;\r\n// };\r\n\r\nimport { ExpencePart } from 'components/ExpIncPart/ExpencePart';\r\n// import { Main } from 'components/Main/Main';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n    getExpenseCategories,\r\n    getExpenseStats,\r\n} from 'redux/Transaction/transactionOperations';\r\n\r\nconst Expenses = () => {\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getExpenseCategories());\r\n        dispatch(getExpenseStats());\r\n    }, [dispatch]);\r\n    return (\r\n        <>\r\n            <ExpencePart />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Expenses;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ExpIncPart_container__qkzqH\",\"calendar\":\"ExpIncPart_calendar__Kyila\",\"backToMain\":\"ExpIncPart_backToMain__u3X3T\",\"contentContainer\":\"ExpIncPart_contentContainer__d8sqN\",\"btn\":\"ExpIncPart_btn__GX25c\",\"btnAccent\":\"ExpIncPart_btnAccent__61vu5\",\"formContainer\":\"ExpIncPart_formContainer__HghfV\",\"form\":\"ExpIncPart_form__FAiIL\",\"inputDescription\":\"ExpIncPart_inputDescription__cMXAx\",\"overlay\":\"ExpIncPart_overlay__RfyiO\",\"inputCategory\":\"ExpIncPart_inputCategory__Z8ZBq\",\"arrow\":\"ExpIncPart_arrow__mVsiu\",\"listCategory\":\"ExpIncPart_listCategory__S6Yrn\",\"itemCategory\":\"ExpIncPart_itemCategory__ksr0f\",\"inputSummContainer\":\"ExpIncPart_inputSummContainer__eaqB8\",\"inputSumm\":\"ExpIncPart_inputSumm__zvPQ6\",\"buttonContainer\":\"ExpIncPart_buttonContainer__uAQIa\",\"prods\":\"ExpIncPart_prods__rpfwY\",\"tableContainer\":\"ExpIncPart_tableContainer__6LkT6\",\"errContainer\":\"ExpIncPart_errContainer__FTpnd\",\"errDescriptionMsg\":\"ExpIncPart_errDescriptionMsg__Gzt+1\",\"errCategoryMsg\":\"ExpIncPart_errCategoryMsg__g46d8\",\"errSummMsg\":\"ExpIncPart_errSummMsg__vugGW\"};"],"names":["Calculator","className","styles","width","height","viewBox","fill","xmlns","d","SummaryTable","summaryData","monthStats","Object","entries","filter","elem","s","map","index","Translator","toFixed","TransactionTable","tablePage","transactionData","dispatch","useDispatch","item","colSpan","date","description","category","amount","onClick","removeTransaction","_id","Button","text","type","ExpencePart","useState","setDescription","setCategory","sum","setSum","list","setList","emptyInput","setEmptyInput","loading","useSelector","getIsLoading","prodExp","getExpencesCategories","expensesTransactionData","getExpencesTransactions","expensesSummaryData","getExpencesMonthStats","balance","getBalance","pageLocation","useLocation","pathname","newDate","getCurrentDate","console","log","useEffect","getExpenseCategories","getExpenseStats","setNewDate","Date","handleChangeForm","evt","target","value","name","handleResetForm","handleSubmitForm","preventDefault","items","Number","toISOString","slice","addExpense","handleIsListTogle","href","Loader","Calendar","selected","onSubmit","placeholder","autoComplete","onChange","style","color","currentTarget","el","ind"],"sourceRoot":""}